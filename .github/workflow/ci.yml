name: CI Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:        # <-- must be under `on:`

permissions:
  contents: write           # needed for tagging + releases
  packages: write           # needed for GHCR push

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  VERSION: 1.0.${{ github.run_number }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0     # needed to create/push tags

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      # 2a
      - name: Set Maven version to ${{ env.VERSION }}
        run: |
          mvn -q versions:set -DnewVersion=${{ env.VERSION }}
          mvn -q versions:commit
          echo "Effective version:" && mvn -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # 2c: push image to GHCR
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.IMAGE_NAME }}:latest

      # Release: tag + upload JAR
      - name: Configure git identity
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Create git tag v${{ env.VERSION }}
        run: |
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}

      - name: Create GitHub Release and upload JAR
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: v${{ env.VERSION }}
          generate_release_notes: true
          files: |
            target/my-app-*.jar
